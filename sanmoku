#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

//グローバル定数の宣言
const char X = 'X';
const char O = 'O';
const char EMPTY = ' ';
const char TIE = 'T';
const char NO_ONE = 'N';

//関数プロトタイプの宣言
//説明文
void instruction();
//質疑応答
char askYesorNo(string question);
//数字を聞く
int askNumber(string question,int high,int low = 0);
//oORx 人の駒の決定
char humanPiece();
//相手の手ー＞相手の駒の決定
char opponent(char piece);
//盤面の表示
void displayBoard(const vector<char>* board);
//勝者の決定
char winner(const vector<char>* board);
//盤面に被りがないように判断する
bool isLegal(const vector<char>* board, int move);
//playerの手番　human = oORx
int humanMove(const vector<char>* board, char human);
//CPUの番
int computerMove(const vector<char>* board, char computer);
//勝者の宣伝
void announceWinner(char winner,char computer, char human);

int main() {
  int move;
  const int NUM_SQUARES = 9;
  vector<char> board(NUM_SQUARES, EMPTY);
  vector<char>* pDis = &board;
  vector<char>* pWin = &board;
  vector<char>* pHum = &board;
  vector<char>* pCom = &board;
  
  instruction();
  char human = humanPiece();
  char computer = opponent(human);
  char turn = X;
  displayBoard(pDis);
  
  while(winner(pWin) == NO_ONE)
    {
      if(turn == human)
      {
        move = humanMove(pHum, human);
        board[move] = human;
      }
      else
      {
        move = computerMove(pCom, computer);
        board[move] = computer;
      }
      displayBoard(pDis);
      turn = opponent(turn);
    }

  announceWinner(winner(pWin), computer, human);

  return 0;
}

void instruction()
{
  	// 三目並べ：人間対AI
	cout << "Welcome to the ultimate man-machine showdown: Tic-Tac-Toe.\n";
	// 0～8の数字を入力する。
	cout << "Make your move known by entering a number, 0-8. The number\n";
	// 数字は下記のように盤の位置を示す。
	cout << "corresponds to the desired board position, as illustrated:\n\n";
	
	cout << "		0 | 1 | 2\n";
	cout << "		3 | 4 | 5\n";
	cout << "		6 | 7 | 8\n\n";
	
	cout << "Duel Start!";
}

char askYesorNo(string question)
{
  char response;
  do
  {
    cout << question << "(y/n): ";
    cin >> response;
  }while(response != 'y' && response != 'n');

  return response;
}

int askNumber(string question,int* const high,int* const low)
{
  int number;
  do
  {
    cout << question << " (" << low << " - " << high << "): ";
    cin >> number;
  }while(number > *high || number < *low);

  return 0;
}

char humanPiece()
{
  //先行取得の確認
  char get_first = askYesorNo("Do you require the first move?");
  //playerの先行
  if(get_first == 'y')
  {
    cout << "\nOk.Come on, challenger!";
    return X;
  }
  //playerの後攻
  else
  {
    cout << "Oh,really?Thank you.Let's play the game!" << endl;
    return O;
  }
}

char opponent(char piece)
{
  	if (piece == X)
	{
		return O;
	}
	else
	{
		return X;
	}
}

void displayBoard(const vector<char>& board)
{
  cout << "\n\t" << board[0] << " | " << board[1] << " | " << board[2];
	cout << "\n\t" << "--------";
	cout << "\n\t" << board[3] << " | " << board[4] << " | " << board[5];
	cout << "\n\t" << "--------";
	cout << "\n\t" << board[6] << " | " << board[7] << " | " << board[8];
	cout << "\n\t" << "\n\n";	
}

// 勝利条件
char winner(const vector<char>& board)
{
	// all possible winning rows
	const int WINNING_ROWS[8][3] = { {0, 1, 2},
									{3, 4, 5},
									{6, 7, 8},
									{0, 3, 6},
									{1, 4, 7},
									{2, 5, 8},
									{0, 4, 8},
									{2, 4, 6} };
	
	const int TOTAL_ROWS = 8;
	
	// いずれかの勝利行に同じ3つの値がある（空じゃない）場合は
	// if any winning row has three values that are the same (and not EMPTY),
	// 勝者が決まる
	// then we have a winner
	for (int row = 0; row < TOTAL_ROWS; ++row)
	{
		if (	(board[WINNING_ROWS[row][0]] != EMPTY) &&
				(board[WINNING_ROWS[row][0]] == board[WINNING_ROWS[row][1]]) &&
				(board[WINNING_ROWS[row][1]] == board[WINNING_ROWS[row][2]]) )
		{
			return board[WINNING_ROWS[row][0]];
		}
	}
	
	// 勝者が出てないので、引き分けであることを確認
	// since nobody has won, check for a tie (no empty squares left)
	if (count(board.begin(), board.end(), EMPTY) == 0)
		return TIE;
	
	// 勝者が出ていなくて引き分けになっていないので、ゲームオーバーじゃない。
	// since nobody has won and it isn't a tie, the game isn't over
	return NO_ONE;
}

inline bool isLegal(const int move, const vector<char>* board)
{
  vector<char> b;
  b = *board; 
	return (b[move] == EMPTY);
}

int humanMove(const vector<char>* board, char human)
{
  const vector<char>* b;
  b = board;
	//次はどうする？
	int move = askNumber("Where will you move?", ((*board).size() - 1));
  
	while (!isLegal(move, board))
	{
		cout << "\nThat square is already occupied, foolish human.\n";
		//次はどうする？
		move = askNumber("Where will you move?", ((*b).size() - 1));
	}
	//　わかった
	cout << "Fine...\n";
	
	return move;
}

int computerMove(vector<char> board, char computer)
{
	unsigned int move = 0;
	bool found = false;
	
	// もし次の番AIが勝つならこうする
	// if computer can win on next move, that's the move to make
	while (!found && move < board.size())
	{
		if (isLegal(move, &board))
		{
			board[move] = computer;
			found = winner(&board) == computer;
			board[move] = EMPTY;
		}
		
		if (!found)
		{
			++move;
		}
	}
	
	// それとも、もし次の番プレイヤーが勝つならこうする
	// otherwise, if human can win on next move, that's the move to make
	if (!found)
	{
		move = 0;
		char human = opponent(computer);
		
		while (!found && move < board.size())
		{
			if (isLegal(move, &board))
			{
				board[move] = human;
				found = winner(&board) == human;
				board[move] = EMPTY;
			}
			
			if (!found)
			{
				++move;
			}
		}
	}

	// そうではない場合、今空いているマスのうちにもっとも良い選択をする
	// otherwise, moving to the best open square is the move to make
	if (!found)
	{
		move = 0;
		unsigned int i = 0;
		
		const int BEST_MOVES[] = {4, 0, 2, 6, 8, 1, 3, 5, 7};
		//　もっとも良いマスを決める
		// pick best open square
		while (!found && i < board.size())
		{
			move = BEST_MOVES[i];
			if (isLegal(move, &board))
			{
				found = true;
			}
			
			++i;
		}
	}
	
	// 目のマスを埋めるぞ。
	cout << "I shall take square number " << move << endl;
	return move;
}

void announceWinner(char winner, char computer, char human)
{
	if (winner == computer)
	{
		// が勝った
		cout << winner << "'s won!\n";
		// 思った通り、またオラの勝ちだ。
		cout << "As I predicted, human, I am triumphant once more -- proof\n";
		// AIは人間より優れていることの証拠だ
		cout << "that computers are superior to humans in all regards.\n";
	}
	else if (winner == human)
	{
		//　が勝った
		cout << winner << "'s won!\n";
		//　うそだ。ありえない。オラ負けるはずがない。騙されたに決まっている。
		cout << "No, no! It cannot be! Somehow you tricked me, human.\n";
		// もう２度と負けない。絶対にな。
		cout << "But never again! I, the computer, so swear it!\n";
	}
	else
	{
		// 引き分けだ
		cout << "It's a tie.\n";
		// とても運のいい人間だな。引き分けになってくれやがった。
		cout << "You were most lucky, human, and somehow managed to tie me.\n";
		// 祝うといい。引き分け以上になることはないのだ。
		cout << "Celebrate... for this is the best you will ever achieve.\n";
	}
}
